{
    "root": true,
    "ignorePatterns": [
        "**/*"
    ],
    "plugins": [
        "@nx"
    ],
    "overrides": [
        {
            "files": [
                "*.ts",
                "*.tsx",
                "*.js",
                "*.jsx"
            ],
            "rules": {
                "@nx/enforce-module-boundaries": [
                    "error",
                    {
                        "enforceBuildableLibDependency": true,
                        "allow": [],
                        "depConstraints": [
                            {
                                "sourceTag": "*",
                                "onlyDependOnLibsWithTags": [
                                    "*"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "files": [
                "*.ts",
                "*.tsx"
            ],
            "extends": [
                "plugin:@nx/typescript"
            ],
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
                // this setting is required to use rules that require type information
                "project": [
                    "./tsconfig.*?.json"
                ]
            },
            "rules": {
                // ESLINT
                //        "import/prefer-default-export": "off",
                //        "import/first": "error",
                //        "import/newline-after-import": "error",
                //        "import/no-duplicates": "error",
                //        "simple-import-sort/imports": "error",
                //        "simple-import-sort/exports": "error",
                //        // eslint-plugin-unused-imports rules
                //        "unused-imports/no-unused-imports": "error",
                "max-len": [
                    "error",
                    120
                ],
                // TypeScript Eslint rules
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "default",
                        "format": [
                            "camelCase",
                            "UPPER_CASE",
                            "PascalCase"
                        ],
                        "leadingUnderscore": "allow"
                    },
                    {
                        "selector": "typeLike",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "enumMember",
                        "format": [
                            "UPPER_CASE"
                        ]
                    },
                    {
                        "selector": [
                            "memberLike",
                            "variableLike"
                        ],
                        "modifiers": [
                            "private"
                        ],
                        "format": [
                            "camelCase"
                        ],
                        "prefix": [
                            "_"
                        ]
                    }
//                    {
//                        "types": [
//                            "boolean"
//                        ],
//                        "selector": [
//                            "memberLike",
//                            "variableLike"
//                        ],
//                        "format": [
//                            "camelCase"
//                        ],
//                        "prefix": [
//                            "can",
//                            "did",
//                            "has",
//                            "is",
//                            "must",
//                            "needs",
//                            "should",
//                            "will"
//                        ]
//                    }
                ],
                "@typescript-eslint/no-unused-vars": [
                    "warn",
                    {
                        "vars": "all",
                        "args": "after-used",
                        "argsIgnorePattern": "^_",
                        "varsIgnorePattern": "^_"
                    }
                ],
                //        "@typescript-eslint/no-unsafe-member-access": "error",
                //        "@typescript-eslint/no-misused-promises": "error",
                //        "@typescript-eslint/no-floating-promises": "error",
                //        "@typescript-eslint/no-shadow": "error",
//                "@typescript-eslint/no-unsafe-call": "error",
                "@typescript-eslint/no-use-before-define": "error",
                "@typescript-eslint/no-unsafe-assignment": "error",
                "@typescript-eslint/no-unsafe-return": "error",
                "@typescript-eslint/no-var-requires": "error",
                "@typescript-eslint/prefer-optional-chain": "error",
                "@typescript-eslint/prefer-nullish-coalescing": "error",
                "@typescript-eslint/prefer-as-const": "error",
                "@typescript-eslint/no-unnecessary-type-assertion": "error",
                "@typescript-eslint/await-thenable": "error",
                "@typescript-eslint/prefer-readonly": "warn",
                "@typescript-eslint/indent": [
                    "error",
                    4
                ],
                "@typescript-eslint/brace-style": [
                    "error",
                    "1tbs"
                ],
                "@typescript-eslint/consistent-type-assertions": "error",
                "@typescript-eslint/explicit-function-return-type": "error",
                "@typescript-eslint/comma-dangle": "warn",
                "@typescript-eslint/lines-between-class-members": "off",
                "@typescript-eslint/quotes": [
                    "error",
                    "double"
                ],
                "@typescript-eslint/no-explicit-any": 2
            }
        },
        {
            "files": [
                "*.js",
                "*.jsx"
            ],
            "extends": [
                "plugin:@nx/javascript"
            ],
            "rules": {}
        },
        {
            "files": [
                "*.spec.ts",
                "*.spec.tsx",
                "*.spec.js",
                "*.spec.jsx"
            ],
            "env": {
                "jest": true
            },
            "rules": {}
        }
    ]
}
